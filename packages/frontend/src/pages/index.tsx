import { useCallback } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { useTheme } from "next-themes";

import SparkleWhite from "../../public/icons/sparkle-white.svg";
import Scroll from "../../public/icons/scroll.svg";
import Discord from "../../public/icons/discord.svg";
import PartnerIcon from "../../public/icons/partner.svg";

import { client } from "../hooks/useUrql";
import { General, HomePage, Media, Partner, StrapiSingleData } from "../types";

type HomeProps = {
  general: StrapiSingleData<General>;
  homePage: StrapiSingleData<HomePage>;
};

const Home: NextPage<HomeProps> = ({ general, homePage }) => {
  const { theme } = useTheme();
  const { partners } = homePage.data?.attributes || {};

  const getLogo = useCallback(
    (partner: Partner) =>
      theme === "dark"
        ? partner.logo_dark.data?.attributes
        : partner.logo_light.data?.attributes,
    [theme]
  );

  const getLogoSrc = useCallback(
    (logo?: Media) =>
      logo
        ? logo.provider === "local"
          ? `${process.env.NEXT_PUBLIC_CMS_URL}${logo.url}`
          : logo.url
        : `/D_D_logo-${theme}.svg`,
    [theme]
  );

  return (
    <>
      <Head>
        <title>Developer DAO</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center">
        <section className="flex w-full flex-col items-center justify-center bg-[url(/home.svg)] bg-center bg-no-repeat pt-5 md:h-screen md:p-0">
          <div className="relative p-5">
            <h1 className="mt-0 mb-5 text-center font-heading text-7xl font-bold uppercase">
              Buidl web3 <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> with frens
            </h1>
            <div className="absolute -top-8 -right-8 hidden xl:block">
              <SparkleWhite />
            </div>
            <div className="absolute -top-12 -right-12 hidden xl:block">
              <SparkleWhite style={{ transform: "scale(0.5)" }} />
            </div>
          </div>
          <h2 className="mt-0 mb-6 max-w-3xl text-center text-2xl opacity-60">
            Developer DAO is a community of thousands of web3 builders creating
            a better internet. Join us and help create the future!
          </h2>
          <div className="relative mb-5 flex gap-4">
            <a href="https://developerdao.com" target="_blank" rel="noreferrer">
              <button className="h-14 rounded-full bg-white px-8 text-black hover:bg-slate-100">
                Claim $CODE
              </button>
            </a>
            <a href="https://developerdao.com" target="_blank" rel="noreferrer">
              <button className="flex h-14 items-center gap-3 rounded-full border bg-[#151515]/70 px-8">
                <Discord />
                <div>
                  <div>Join Discord</div>
                  <div className="text-xs opacity-60">(via Guild.xyz)</div>
                </div>
              </button>
            </a>

            <div className="absolute inset-x-0 -bottom-32 flex hidden justify-center lg:flex">
              <Scroll />
            </div>
          </div>
        </section>

        <section className="mt-14 flex w-full flex-col justify-center lg:mt-0">
          <h2 className="mt-0 mb-14 text-center font-heading text-6xl font-bold uppercase text-[#DBDBDB]">
            Partners
          </h2>

          <div className="mb-14 flex flex-col items-center justify-center">
            <div className="mb-14 flex flex-wrap justify-center gap-4">
              {partners?.data ? (
                partners.data.map((partnerEntity) => {
                  return (
                    <Link
                      href={partnerEntity.attributes.website}
                      key={partnerEntity.id}
                      target="_blank"
                      rel="noreferrer"
                    >
                      <a className="relative h-14 w-52">
                        <Image
                          src={getLogoSrc(getLogo(partnerEntity.attributes))}
                          alt={partnerEntity.attributes.name || "partner image"}
                          layout="fill"
                          objectFit="contain"
                        />
                      </a>
                    </Link>
                  );
                })
              ) : (
                <></>
              )}
            </div>

            <a
              href="https://airtable.com/shrYLrOrjhOHJUdVl"
              target="_blank"
              rel="noreferrer"
            >
              <button className="flex h-14 items-center gap-3 rounded-full border bg-[#151515]/70 px-8">
                <PartnerIcon />
                <div>Become a Partner</div>
              </button>
            </a>
          </div>
        </section>
      </main>
    </>
  );
};

export const getServerSideProps = async () => {
  const { data } = await client
    .query(
      `
    query HomePage {
      homePage {
        data {
          attributes {
            meta_og {
              id
              title
              description
              image
              image_media {
                data {
                  id
                  attributes {
                    provider
                    url
                  }
                }
              }
            }
            heading
            sub_heading
            current_status {
              statement {
                id
                name
                title
                description
              }
              link {
                id
                name
                type
                  title
                link
                disabled
              }
            }
            values {
              id
              name
              description
              title
            }
            mission
            goals {
              id
              name
              description
              title
            }
            partners {
              data {
                id
                attributes {
                  name
                  website
                  logo_dark {
                    data {
                      attributes {
                        provider
                        url
                      }
                    }
                  }
                  logo_light {
                    data {
                      attributes {
                        provider
                        url
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }`,
      {}
    )
    .toPromise();

  return {
    props: data,
  };
};

export default Home;
